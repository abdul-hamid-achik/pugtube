version: '3'

tasks:
  docker.start:
    desc: Starts Docker engine locally
    cmds:
      - open -a Docker

  ci.push:
    desc: Runs github actions locally as if it was pushed to the repo
    cmds:
      - act push

  ci.pr:
    desc: Runs github actions locally as if it was a pull request
    cmds:
      - act pull_request

  compose.up:
    desc: Starts all services in docker-compose.yml
    cmds:
      - docker compose up -d

  compose.dev:
    desc: stops api and web so we can run them locally with debugger
    cmds:
      - docker compose stop api web

  compose.down:
    desc: Stops all services in docker-compose.yml
    cmds:
      - docker compose down

  compose.build:
    desc: Builds all services in docker-compose.yml
    cmds:
      - docker compose build

  compose.logs:
    desc: Shows logs for all services in docker-compose.yml
    cmds:
      - docker compose logs -f api web

  logs:
    desc: Shows logs for all services in docker-compose.yml
    cmds:
      - task: compose.logs

  cd.api:
    desc: Changes directory to api
    cmds:
      - cd api

  cd.web:
    desc: Changes directory to web
    cmds:
      - cd web

  build.web.local:
    desc: Builds web locally
    dir: web
    cmds:
      - npm run build
    sources:
      - components/**/*.ts[x]
      - pages/**/*.ts[x]
      - styles/**/*.(css|less|sass)
      - client/*.ts
    generates:
      - .next/*

  build.web:
    desc: Builds web container
    dir: web
    cmds:
      - docker build -t web .

  build:
    desc: Builds all containers(api, web)
    cmds:
      - task: build.web
      - task: build.api

  start:
    desc: Starts all services in docker-compose.yml
    summary: |
        Starts all services in docker-compose.yml, including api and web.
        This is the same as running `docker compose up -d`
    deps: [ compose.build, compose.up ]
    cmds:
      - task: logs

  dev:
    desc: Starts services in docker-compose.yml except for api and web, ideal for local development
    summary: |
      This task starts all services in docker-compose.yml except for api and web. which are stopped
      you may want to run this to have the database and all the services running locally with docker
      but run the api and web locally with the debugger
    deps: [ compose.build, compose.up, compose.dev ]
    cmds:
      - task: logs
  reset:
    desc: Resets all services in docker-compose.yml
    deps: [ compose.down, compose.build, compose.up ]
    cmds:
      - task: logs

  run.web:
    desc: Runs web container
    deps: [ compose.up, build.web ]
    cmds:
      - docker run -p 3000:3000 web -d

  build.api:
    desc: Builds api container
    dir: api
    cmds:
      - docker build -t api .

  run.api:
    desc: Runs api container
    deps: [ compose.up, build.api ]
    cmds:
      - docker run -p 8080:8080 api -d

  api.migrate:
    desc: Runs migrations for api locally
    dir: api
    cmds:
      - pdm manage migrate

  api.test:
    desc: Runs tests for api locally
    dir: api
    cmds:
      - pdm test

  api.shell:
    desc: Runs shell for api locally
    dir: api
    cmds:
      - pdm manage shell_plus

  api.routes:
    desc: Shows routes for api locally
    dir: api
    cmds:
      - pdm manage show_urls

  web.test:
    desc: Runs tests for web locally
    dir: web
    cmds:
      - npm run test

  test:
    desc: Runs tests for api and web locally
    deps: [compose.up]
    cmds:
      - task: api.test
      - task: web.test

  start.api:
    desc: Starts api locally
    dir: api
    deps: [ api.migrate ]
    cmds:
      - pdm manage runserver

  start.web:
    desc: Starts web locally
    dir: web
    deps: [ build.web.local ]
    cmds:
      - npm start

  default:
    desc: Starts all services in docker-compose.yml and prints logs, ideal for local development
    deps: [ dev ]

  clear:
    desc: Clears all containers and images
    cmds:
      - task: compose.down
      - docker system prune -af --volumes

  seed:
    desc: Seeds the database
    dir: api
    cmds:
      - pdm manage pexels