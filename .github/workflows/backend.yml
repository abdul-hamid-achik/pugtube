name: Backend Compliance CI

on:
  push:
    paths:
      - 'api/**'
      - '.github/**'

defaults:
  run:
    shell: bash
    working-directory: api

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup_python
        with:
          env: 'dev'
      - run:  |
          pdm sync --dev
          pdm format

  test:
    needs: format
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup_python
        with:
          env: 'dev'

      - name: Run Tests
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
        run: |
          pdm sync --dev
          pdm test

  release:
#    needs: test
    runs-on: ubuntu-latest
    name: Release to Docker Hub
    strategy:
      matrix:
        dockerfile: [ Dockerfile, agent.Dockerfile, orion.Dockerfile ]
        repo: [ abdulachik/api.pugtube.dev, abdulachik/agent.pugtube.dev, abdulachik/orion.pugtube.dev ]
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: ${{ matrix.dockerfile }}
          tags: ${{ matrix.repo }}:latest,${{ matrix.repo }}:${{ github.sha }}